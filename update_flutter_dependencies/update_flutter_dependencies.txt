# List of Flutter project paths
$apps = @(
    "C:\Users\diasa\StudioProjects\ikon_demo",
    "C:\Users\diasa\StudioProjects\login_page",
    "C:\Users\diasa\StudioProjects\document_management_main"
    # Add more paths as needed
)

# Git package details
$packageName = "menu_submenu_sidebar_dropdown_accordian_package" # The package name
$packageGitUrl = "https://github.com/RomanticNihilist/menu_submenu_sidebar_dropdown_accordian_package.git" # Git URL
$branchOrCommit = "main" # Set the branch to 'main'

# Function to clear pub cache for the specific Git package
function Clear-PubCacheForGitPackage {
    param (
        [string]$packageName
    )

    Write-Host "Clearing pub cache for package: $packageName..."
    $pubCachePath = "$HOME\.pub-cache\git"

    if (Test-Path -Path $pubCachePath) {
        $packageDirectories = Get-ChildItem -Path $pubCachePath -Directory | Where-Object { $_.Name -like "*$packageName*" }

        if ($packageDirectories.Count -gt 0) {
            foreach ($dir in $packageDirectories) {
                Remove-Item -Recurse -Force -Path $dir.FullName
                Write-Host "Removed cached directory: $dir"
            }
        } else {
            Write-Host "No cached directories found for package: $packageName."
        }
    } else {
        Write-Host "The directory $pubCachePath does not exist. Skipping cache clearing."
    }
}

# Clear cache for the specific Git package
Clear-PubCacheForGitPackage -packageName $packageName

# Loop through each app directory and update the specific dependency
foreach ($app in $apps) {
    Write-Host "Processing project: $app"
    Set-Location -Path $app

    # Update only the dependency for the specified package in pubspec.yaml
    $pubspecPath = Join-Path $app "pubspec.yaml"
    $pubspecContent = Get-Content $pubspecPath -Raw

    # Use a regex to find and update the Git URL and ref for the specific package
    $regex = "(menu_submenu_sidebar_dropdown_accordian_package:\s*\n\s*git:\s*\n\s*url:\s*).*?(\n\s*ref:\s*).*"
    $replacement = "`$1$packageGitUrl`n      ref: $branchOrCommit"

    # Perform the replacement
    $updatedPubspecContent = $pubspecContent -replace $regex, $replacement

    # Save the updated content back to pubspec.yaml
    Set-Content -Path $pubspecPath -Value $updatedPubspecContent

    # Remove .packages and pubspec.lock to force a re-fetch
    Remove-Item -Path "$app\.packages" -ErrorAction SilentlyContinue
    Remove-Item -Path "$app\pubspec.lock" -ErrorAction SilentlyContinue

    # Run flutter pub get
    flutter pub get
    Write-Host "Dependencies updated for: $app"
}

Write-Host "All projects have been updated and dependencies refreshed!"
